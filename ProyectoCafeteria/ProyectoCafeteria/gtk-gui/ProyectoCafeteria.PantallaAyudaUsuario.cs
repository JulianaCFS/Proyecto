
// This file has been generated by the GUI designer. Do not modify.
namespace ProyectoCafeteria
{
	public partial class PantallaAyudaUsuario
	{
		private global::Gtk.VBox vbox2;
		private global::Gtk.Fixed fixed20;
		private global::Gtk.ScrolledWindow scrolledwindow1;
		private global::Gtk.Label label3;
		private global::Gtk.Fixed fixed22;
		private global::Gtk.Table table3;
		private global::Gtk.Button botonAceptar;
		private global::Gtk.Fixed fixed23;
		private global::Gtk.Fixed fixed24;
		private global::Gtk.Fixed fixed25;
		private global::Gtk.Fixed fixed26;
		private global::Gtk.Fixed fixed27;
		
		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget ProyectoCafeteria.PantallaAyudaUsuario
			this.Name = "ProyectoCafeteria.PantallaAyudaUsuario";
			this.Title = global::Mono.Unix.Catalog.GetString ("Ayuda");
			this.TypeHint = ((global::Gdk.WindowTypeHint)(1));
			this.WindowPosition = ((global::Gtk.WindowPosition)(3));
			// Container child ProyectoCafeteria.PantallaAyudaUsuario.Gtk.Container+ContainerChild
			this.vbox2 = new global::Gtk.VBox ();
			this.vbox2.Name = "vbox2";
			this.vbox2.Spacing = 6;
			// Container child vbox2.Gtk.Box+BoxChild
			this.fixed20 = new global::Gtk.Fixed ();
			this.fixed20.Name = "fixed20";
			this.fixed20.HasWindow = false;
			this.vbox2.Add (this.fixed20);
			global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.fixed20]));
			w1.Position = 0;
			w1.Expand = false;
			w1.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.scrolledwindow1 = new global::Gtk.ScrolledWindow ();
			this.scrolledwindow1.CanFocus = true;
			this.scrolledwindow1.Name = "scrolledwindow1";
			this.scrolledwindow1.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child scrolledwindow1.Gtk.Container+ContainerChild
			global::Gtk.Viewport w2 = new global::Gtk.Viewport ();
			w2.ShadowType = ((global::Gtk.ShadowType)(0));
			// Container child GtkViewport.Gtk.Container+ContainerChild
			this.label3 = new global::Gtk.Label ();
			this.label3.Name = "label3";
			this.label3.LabelProp = global::Mono.Unix.Catalog.GetString ("\t\t\t\t\t\tPantalla de AYUDA\n\n1.Pantalla Principal - INICIAR PEDIDO\n\n \tPara iniciar un pedido en la terminal de clientes debemos ir en el botón de \nINICIAR PEDIDO (color rojo).\n\n\tUna vez hemos iniciado pedido nos mostrará una nueva pantalla, donde nos \npedirá el número de persona, para que nos pueda asignar una mesa o varias mesas.\n\n\tNo habiendo mesa nos informará con un mensaje y en algunos minutos volvemos \na intentarlo.\nHabiendo  mesa, podemos elegir los artículos a pedir en los botones inferiores.\n\n2.Para elegir una cantidad\n\n\tDebemos dar dos clic en el artículo a elegir, donde nos saldrá una nueva pantalla \npara que podamos  poner la cantidad y se ACEPTA.\n\n3. Pantallas con Botones de Cancelar o Eliminar\n\nEl de CANCELAR, para que canceles el valor elegido y la de ELIMINAR se elimina el\n pedido.\n\nPara CANCELAR un valor elegido, tienes que haber seleccionado un artículo para\n que puedas cancelarlo.\n\n4. Pantallas con listas de artículos a seleccionar\n\nen las pantallas como indicamos arriba, debes seleccionar algún artículo antes de \nACEPTAR, porque en caso que no lo hagas no te guardará el pedido.\n\n5. Imprimir ticket\n\nPara finalizar con su pedido y imprimir su ticket debes ir a la PANTALLA PRINCIPAL\ny hacer un clic en el botón de ticket, que lo encontrarás arriba a la derecha, abajo del \nvalor total a pagar.\n\n");
			w2.Add (this.label3);
			this.scrolledwindow1.Add (w2);
			this.vbox2.Add (this.scrolledwindow1);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.scrolledwindow1]));
			w5.Position = 1;
			// Container child vbox2.Gtk.Box+BoxChild
			this.fixed22 = new global::Gtk.Fixed ();
			this.fixed22.Name = "fixed22";
			this.fixed22.HasWindow = false;
			this.vbox2.Add (this.fixed22);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.fixed22]));
			w6.Position = 2;
			w6.Expand = false;
			w6.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.table3 = new global::Gtk.Table (((uint)(2)), ((uint)(3)), false);
			this.table3.Name = "table3";
			this.table3.RowSpacing = ((uint)(6));
			this.table3.ColumnSpacing = ((uint)(6));
			// Container child table3.Gtk.Table+TableChild
			this.botonAceptar = new global::Gtk.Button ();
			this.botonAceptar.CanFocus = true;
			this.botonAceptar.Name = "botonAceptar";
			this.botonAceptar.UseUnderline = true;
			// Container child botonAceptar.Gtk.Container+ContainerChild
			global::Gtk.Alignment w7 = new global::Gtk.Alignment (0.5F, 0.5F, 0F, 0F);
			// Container child GtkAlignment.Gtk.Container+ContainerChild
			global::Gtk.HBox w8 = new global::Gtk.HBox ();
			w8.Spacing = 2;
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Image w9 = new global::Gtk.Image ();
			w9.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-apply", global::Gtk.IconSize.Menu);
			w8.Add (w9);
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Label w11 = new global::Gtk.Label ();
			w11.LabelProp = global::Mono.Unix.Catalog.GetString ("Aceptar");
			w11.UseUnderline = true;
			w8.Add (w11);
			w7.Add (w8);
			this.botonAceptar.Add (w7);
			this.table3.Add (this.botonAceptar);
			global::Gtk.Table.TableChild w15 = ((global::Gtk.Table.TableChild)(this.table3 [this.botonAceptar]));
			w15.TopAttach = ((uint)(1));
			w15.BottomAttach = ((uint)(2));
			w15.LeftAttach = ((uint)(2));
			w15.RightAttach = ((uint)(3));
			w15.XOptions = ((global::Gtk.AttachOptions)(4));
			w15.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.fixed23 = new global::Gtk.Fixed ();
			this.fixed23.Name = "fixed23";
			this.fixed23.HasWindow = false;
			this.table3.Add (this.fixed23);
			global::Gtk.Table.TableChild w16 = ((global::Gtk.Table.TableChild)(this.table3 [this.fixed23]));
			w16.LeftAttach = ((uint)(2));
			w16.RightAttach = ((uint)(3));
			w16.XOptions = ((global::Gtk.AttachOptions)(4));
			w16.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.fixed24 = new global::Gtk.Fixed ();
			this.fixed24.Name = "fixed24";
			this.fixed24.HasWindow = false;
			this.table3.Add (this.fixed24);
			global::Gtk.Table.TableChild w17 = ((global::Gtk.Table.TableChild)(this.table3 [this.fixed24]));
			w17.TopAttach = ((uint)(1));
			w17.BottomAttach = ((uint)(2));
			w17.LeftAttach = ((uint)(1));
			w17.RightAttach = ((uint)(2));
			w17.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.fixed25 = new global::Gtk.Fixed ();
			this.fixed25.Name = "fixed25";
			this.fixed25.HasWindow = false;
			this.table3.Add (this.fixed25);
			global::Gtk.Table.TableChild w18 = ((global::Gtk.Table.TableChild)(this.table3 [this.fixed25]));
			w18.LeftAttach = ((uint)(1));
			w18.RightAttach = ((uint)(2));
			w18.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.fixed26 = new global::Gtk.Fixed ();
			this.fixed26.Name = "fixed26";
			this.fixed26.HasWindow = false;
			this.table3.Add (this.fixed26);
			global::Gtk.Table.TableChild w19 = ((global::Gtk.Table.TableChild)(this.table3 [this.fixed26]));
			w19.TopAttach = ((uint)(1));
			w19.BottomAttach = ((uint)(2));
			w19.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.fixed27 = new global::Gtk.Fixed ();
			this.fixed27.Name = "fixed27";
			this.fixed27.HasWindow = false;
			this.table3.Add (this.fixed27);
			global::Gtk.Table.TableChild w20 = ((global::Gtk.Table.TableChild)(this.table3 [this.fixed27]));
			w20.YOptions = ((global::Gtk.AttachOptions)(4));
			this.vbox2.Add (this.table3);
			global::Gtk.Box.BoxChild w21 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.table3]));
			w21.Position = 3;
			w21.Expand = false;
			w21.Fill = false;
			this.Add (this.vbox2);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 602;
			this.DefaultHeight = 300;
			this.Show ();
			this.botonAceptar.Clicked += new global::System.EventHandler (this.OnBotonAceptarClicked);
		}
	}
}
